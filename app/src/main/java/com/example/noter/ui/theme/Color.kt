package com.example.noter.ui.theme

import androidx.compose.ui.graphics.Color

// For DarkScheme
val PrimaryDark = Color(0xFFC6C6C6)
val OnPrimaryDark = Color(0xFF303030)
val PrimaryContainerDark = Color(0xFF000000)
val OnPrimaryContainerDark = Color(0xFF757575)
val SecondaryDark = Color(0xFF131010)
val OnSecondaryDark = Color(0xFFFFFFFF)
val SecondaryContainerDark = Color(0xFF282525)
val OnSecondaryContainerDark = Color(0xFF918C8B)
val TertiaryDark = Color(0xFF40403E)
val OnTertiaryDark = Color(0xFFFFFFFF)
val TertiaryContainerDark = Color(0xFF575755)
val OnTertiaryContainerDark = Color(0xFFCECDCA)
val ErrorDark = Color(0xFFFFB4AB)
val OnErrorDark = Color(0xFF690005)
val ErrorContainerDark = Color(0xFF93000A)
val OnErrorContainerDark = Color(0xFFFFDAD6)
val BackgroundDark = Color(0xFF131313)
val OnBackgroundDark = Color(0xFFE2E2E2)
val SurfaceDark = Color(0xFF141313)
val OnSurfaceDark = Color(0xFFE6E1E1)
val SurfaceVariantDark = Color(0xFF444748)
val OnSurfaceVariantDark = Color(0xFFC4C7C7)
val SurfaceTintDark = Color(0xFFFFFFFF)
val OutlineDark = Color(0xFF8E9191)
val OutlineVariantDark = Color(0xFF444748)
val ScrimDark = Color(0xFF000000)
val InverseSurfaceDark = Color(0xFFE6E1E1)
val InverseOnSurfaceDark = Color(0xFF313030)
val InversePrimaryDark = Color(0xFF5E5E5E)
val SurfaceDimDark = Color(0xFF141313)
val SurfaceBrightDark = Color(0xFF3A3939)
val SurfaceContainerLowestDark = Color(0xFF0F0E0E)
val SurfaceContainerLowDark = Color(0xFF1C1B1B)
val SurfaceContainerDark = Color(0xFF201F1F)
val SurfaceContainerHighDark = Color(0xFF2B2A2A)
val SurfaceContainerHighestDark = Color(0xFF363434)
//val PrimaryDark = Color(0xFFF3F1FF)
//val OnPrimaryDark = Color(0xFFFFFFFF)
//val PrimaryContainerDark = Color(0xFF000000)
//val OnPrimaryContainerDark = Color(0xFFFFFFFF)
//val InversePrimaryDark = Color(0xFFFFFFFF)
//val SecondaryDark = Color(0xFFCCC2DC)
//val OnSecondaryDark = Color(0xFFFFFFFF)
//val SecondaryContainerDark = Color(0xFF151414)
//val OnSecondaryContainerDark = Color(0xFFFFFFFF)
//val TertiaryDark = Color(0xFF5E5C5C)
//val OnTertiaryDark = Color(0xFFFFFFFF)
//val TertiaryContainerDark = Color(0xFF2D2C2C)
//val OnTertiaryContainerDark = Color(0xFFFFFFFF)
//val BackgroundDark = Color(0xFFFFFFFF)
//val OnBackgroundDark = Color(0xFFFFFFFF)
//val SurfaceDark = Color(0xFFFFFFFF)
//val OnSurfaceDark = Color(0xFFFFFFFF)
//val SurfaceVariantDark = Color(0xFFFFFFFF)
//val OnSurfaceVariantDark = Color(0xFFFFFFFF)
//val SurfaceTintDark = Color(0xFFFFFFFF)
//val InverseSurfaceDark = Color(0xFFFFFFFF)
//val InverseOnSurfaceDark = Color(0xFFFFFFFF)
//val ErrorDark = Color(0xFFFFFFFF)
//val OnErrorDark = Color(0xFFFFFFFF)
//val ErrorContainerDark = Color(0xFFFFFFFF)
//val OnErrorContainerDark = Color(0xFFFFFFFF)
//val OutlineDark = Color(0xFFFFFFFF)
//val OutlineVariantDark = Color(0xFFFFFFFF)
//val ScrimDark = Color(0xFFFFFFFF)
//val SurfaceBrightDark = Color(0xFFFFFFFF)
//val SurfaceContainerDark = Color(0xFFFFFFFF)
//val SurfaceContainerHighDark = Color(0xFFFFFFFF)
//val SurfaceContainerHighestDark = Color(0xFFFFFFFF)
//val SurfaceContainerLowDark = Color(0xFFFFFFFF)
//val SurfaceContainerLowestDark = Color(0xFFFFFFFF)
//val SurfaceDimDark = Color(0xFFFFFFFF)


// For LightScheme
val PrimaryLight = Color(0xFFA43800)
val OnPrimaryLight = Color(0xFFFFFFFF)
val PrimaryContainerLight = Color(0xFFCD4800)
val OnPrimaryContainerLight = Color(0xFFFFFBFF)
val SecondaryLight = Color(0xFF9B4420)
val OnSecondaryLight = Color(0xFFFFFFFF)
val SecondaryContainerLight = Color(0xFFFE9066)
val OnSecondaryContainerLight = Color(0xFF752805)
val TertiaryLight = Color(0xFF6E5D00)
val OnTertiaryLight = Color(0xFFFFFFFF)
val TertiaryContainerLight = Color(0xFFC4AA2E)
val OnTertiaryContainerLight = Color(0xFF4B3F00)
val ErrorLight = Color(0xFFBA1A1A)
val OnErrorLight = Color(0xFFFFFFFF)
val ErrorContainerLight = Color(0xFFFFDAD6)
val OnErrorContainerLight = Color(0xFF93000A)
val BackgroundLight = Color(0xFFFFF8F6)
val OnBackgroundLight = Color(0xFF271813)
val SurfaceLight = Color(0xFFFFF8F6)
val OnSurfaceLight = Color(0xFF271813)
val SurfaceVariantLight = Color(0xFFFFDBCF)
val OnSurfaceVariantLight = Color(0xFF5B4137)
val SurfaceTintLight = Color(0xFF8F7065)
val OutlineLight = Color(0xFFE3BFB2)
val OutlineVariantLight = Color(0xFF8F7065)
val ScrimLight = Color(0xFF000000)
val InverseSurfaceLight = Color(0xFF3E2C26)
val InverseOnSurfaceLight = Color(0xFFFFEDE7)
val InversePrimaryLight = Color(0xFFFFB59A)
val SurfaceDimLight = Color(0xFFF0D4CB)
val SurfaceBrightLight = Color(0xFFFFF8F6)
val SurfaceContainerLowestLight = Color(0xFFFFFFFF)
val SurfaceContainerLowLight = Color(0xFFFFF1EC)
val SurfaceContainerLight = Color(0xFFFFE9E2)
val SurfaceContainerHighLight = Color(0xFFFFE2D9)
val SurfaceContainerHighestLight = Color(0xFFF9DDD3)
//val PrimaryLight = Color(0xFF6650a4)
//val OnPrimaryLight = Color(0xFFFFFFFF)
//val PrimaryContainerLight = Color(0xFFD2A498)
//val OnPrimaryContainerLight = Color(0xFFFFFFFF)
//val InversePrimaryLight = Color(0xFFFFFFFF)
//val SecondaryLight = Color(0xFF625b71)
//val OnSecondaryLight = Color(0xFFA69D9D)
//val SecondaryContainerLight = Color(0xFFDACFCF)
//val OnSecondaryContainerLight = Color(0xFF464545)
//val TertiaryLight = Color(0xFF7D5260)
//val OnTertiaryLight = Color(0xFFFFFFFF)
//val TertiaryContainerLight = Color(0xFFB2A4A4)
//val OnTertiaryContainerLight = Color(0xFFFFFFFF)
//val BackgroundLight = Color(0xFFFFFFFF)
//val OnBackgroundLight = Color(0xFFFFFFFF)
//val SurfaceLight = Color(0xFFFFFFFF)
//val OnSurfaceLight = Color(0xFFFFFFFF)
//val SurfaceVariantLight = Color(0xFFFFFFFF)
//val OnSurfaceVariantLight = Color(0xFFFFFFFF)
//val SurfaceTintLight = Color(0xFFFFFFFF)
//val InverseSurfaceLight = Color(0xFFFFFFFF)
//val InverseOnSurfaceLight = Color(0xFFFFFFFF)
//val ErrorLight = Color(0xFFFFFFFF)
//val OnErrorLight = Color(0xFFFFFFFF)
//val ErrorContainerLight = Color(0xFFFFFFFF)
//val OnErrorContainerLight = Color(0xFFFFFFFF)
//val OutlineLight = Color(0xFFFFFFFF)
//val OutlineVariantLight = Color(0xFFFFFFFF)
//val ScrimLight = Color(0xFFFFFFFF)
//val SurfaceBrightLight = Color(0xFFFFFFFF)
//val SurfaceContainerLight = Color(0xFFFFFFFF)
//val SurfaceContainerHighLight = Color(0xFFFFFFFF)
//val SurfaceContainerHighestLight = Color(0xFFFFFFFF)
//val SurfaceContainerLowLight = Color(0xFFFFFFFF)
//val SurfaceContainerLowestLight = Color(0xFFFFFFFF)
//val SurfaceDimLight = Color(0xFFFFFFFF)
